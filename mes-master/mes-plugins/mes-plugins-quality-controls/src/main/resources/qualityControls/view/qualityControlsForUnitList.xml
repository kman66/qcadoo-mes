<?xml version="1.0" encoding="UTF-8"?>
<!--

    ***************************************************************************
    Copyright (c) 2010 Qcadoo Limited
    Project: Qcadoo MES
    Version: 1.4

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->
<view defaultAuthorizationRole="ROLE_BASE_FUNCTIONALITY" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schema.qcadoo.org/view"
	xsi:schemaLocation="http://schema.qcadoo.org/view http://schema.qcadoo.org/view.xsd"
	name="qualityControlsForUnitList"
	modelName="qualityControl"
	menuAccessible="true">
	
	<component type="window" name="window" reference="window">
		<ribbon>
			<template name="standardGridTemplate" />
			<group name="controlStatus">
				<bigButton name="closeControl" icon="acceptIcon24.png"
					state="disabled">
					<script>
						<![CDATA[
							this.addOnChangeListener({
								onClick: function() {
									if (window.confirm("#{translate(qualityControls.qualityControl.window.ribbon.status.closeControl.confirm)}")) {
										#{grid}.performEvent('closeQualityControl', []);
									};
								}
							});
						]]>
					</script>
				</bigButton>
			</group>
			<group name="reports">
				<smallButton name="pdf" icon="pdfIcon16.png"
					action="#{grid}.fireEvent(printQualityControlReport,pdf,unit);"
					state="disabled" />
				<smallButton name="xls" icon="xlsIcon16.png"
					action="#{grid}.fireEvent(printQualityControlReport,xls,unit);"
					state="disabled" />
			</group>
		</ribbon>
		<component type="grid" name="qualityControlsForUnit"
			reference="grid">
			<script>
				<![CDATA[
					var qualityControlStatus = #{window}.getRibbonItem("controlStatus.closeControl");
					var reportsPdf = #{window}.getRibbonItem("reports.pdf");
					var reportsXls = #{window}.getRibbonItem("reports.xls");
					var listener = {
						onChange: function(selectedEntitiesArray) {
							if (! selectedEntitiesArray || selectedEntitiesArray.length == 0) {
								qualityControlStatus.disable();
								reportsPdf.disable();
								reportsXls.disable();
							} else {
								if (selectedEntitiesArray.length > 1) {
									qualityControlStatus.disable("#{translate(moreThanOneRecordSelected)}");
								} else if (selectedEntitiesArray[0].fields.closed == true) {
									qualityControlStatus.disable("#{translate(qualityControls.qualityControls.ribbon.alreadyClosed)}");
								} else {
									qualityControlStatus.enable();
								}
								var allClosed = true;
								for (var i in selectedEntitiesArray) {
									if (selectedEntitiesArray[i].fields.closed == false) {
										allClosed = false;
										break;
									}
								}
								if (allClosed) {
									reportsPdf.enable();
									reportsXls.enable();
								} else {
									reportsPdf.disable("#{translate(qualityControls.qualityControls.ribbon.notAllClosedClosed)}");
									reportsXls.disable("#{translate(qualityControls.qualityControls.ribbon.notAllClosedClosed)}");
								}
							}
						}
					}
					this.addOnChangeListener(listener);
				]]>
			</script>
			<option type="column" name="number" fields="number" link="true" />
			<option type="column" name="order" fields="order" expression="#order['number']"
				link="true" />
			<option type="column" name="controlledQuantity" fields="controlledQuantity"
				link="true" />
			<option type="column" name="unit" fields="order" expression="#order['product'].get('unit')"
				link="true" />
			<option type="column" name="closed" fields="closed" link="false"
				width="100" />
			<option type="order" column="number,order,controlledQuantity,closed"
				direction="desc" />
			<option type="correspondingView" value="qualityControls/qualityControlForUnitDetails" />
			<option type="correspondingComponent" value="form" />
			<option type="searchable" value="number,order,controlledQuantity,unit,closed" />
			<option type="orderable" value="number,order,controlledQuantity,unit,closed" />
			<option type="fullscreen" value="true" />
			<option type="multiselect" value="true" />
			<listener event="closeQualityControl"
				class="com.qcadoo.mes.qualityControls.QualityControlService" method="closeQualityControl" />
			<listener event="printQualityControlReport"
				class="com.qcadoo.mes.qualityControls.print.QualityControlsReportService"
				method="printQualityControlReportForOrder" />
		</component>
		<option type="fixedHeight" value="true" />
		<option type="header" value="false" />
	</component>
	<hooks>
		<beforeRender class="com.qcadoo.mes.qualityControls.QualityControlService"
			method="addRestrictionToQualityControlGrid" />
	</hooks>
</view>