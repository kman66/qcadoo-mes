<?xml version="1.0" encoding="UTF-8"?>
<!--

    ***************************************************************************
    Copyright (c) 2010 Qcadoo Limited
    Project: Qcadoo MES
    Version: 1.4

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->
<view defaultAuthorizationRole="ROLE_MATERIAL_FLOW" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns="http://schema.qcadoo.org/view"
      xsi:schemaLocation="http://schema.qcadoo.org/view http://schema.qcadoo.org/view.xsd"
      name="documentsList"
      modelName="documentDto"
      menuAccessible="true">

    <component type="window" name="window">
        <ribbon>
            <template name="standardGridTemplate" excludeItems="actions.copy,actions.delete"/>
            <group name="print">
                <bigButton name="printDispositionOrderPdf" icon="pdfIcon24.png" state="enabled">
                    <script>
                        <![CDATA[
                            this.addOnChangeListener({
                                onClick: function() {
                                    #{grid}.performEvent({
                                        name    : 'printDispositionOrder',
                                        args    : ['pdf'],
                                        type    : undefined,
                                        callback : function(){
                                            setTimeout(function(){#{grid}.performRefresh();}, 2000);
                                        }
                                    });
                                }
                            });
                        ]]>
                    </script>
                </bigButton>
            </group>
        </ribbon>

        <component type="grid" name="grid" reference="grid">
            <option type="column" name="number" fields="number" link="true" width="70"/>
            <option type="column" name="name" fields="name" link="true" width="70"/>
            <option type="column" name="type" fields="type" link="true"/>
            <option type="column" name="time" fields="time" width="100"/>
            <option type="column" name="state" fields="state" width="100"/>
            <option type="column" name="locationFromName" fields="locationFromName"/>
            <option type="column" name="locationToName" fields="locationToName"/>
            <option type="column" name="description" fields="description"/>
            <option type="column" name="companyName" fields="companyName"/>
            <option type="column" name="userName" fields="userName" width="150"/>

            <option type="order" column="time" direction="desc" width="200"/>

            <option type="searchable"
                    value="number,name,type,time,state,locationFromName,locationToName,description,companyName,userName"/>
            <option type="orderable"
                    value="number,name,type,time,state,locationFromName,locationToName,description,companyName,userName"/>

            <option type="correspondingView" value="materialFlowResources/documentDetails"/>
            <option type="correspondingComponent" value="form"/>

            <option type="fullscreen" value="true"/>
            <option type="multiselect" value="true"/>

            <criteriaModifier class="com.qcadoo.mes.materialFlowResources.criteriaModifiers.DocumentsCriteriaModifier"
                              method="hideDraftDocumentsWithOrder"/>

            <listener event="printDispositionOrder"
                      class="com.qcadoo.mes.materialFlowResources.listeners.DocumentsListListeners"
                      method="printDispositionOrder"/>
        </component>

        <option type="fixedHeight" value="true"/>
        <option type="header" value="false"/>
    </component>

    <hooks>
        <beforeRender
                class="com.qcadoo.mes.materialFlowResources.hooks.DocumentsListHooks"
                method="onBeforeRender"/>
    </hooks>
</view>