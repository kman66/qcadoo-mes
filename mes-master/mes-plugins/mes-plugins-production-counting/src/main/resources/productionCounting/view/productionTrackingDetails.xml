<?xml version="1.0" encoding="UTF-8"?>
<!--

    ***************************************************************************
    Copyright (c) 2010 Qcadoo Limited
    Project: Qcadoo MES
    Version: 1.4

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->
<view defaultAuthorizationRole="ROLE_PRODUCTION_TRACKING" name="productionTrackingDetails"
      modelName="productionTracking"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schema.qcadoo.org/view"
      xsi:schemaLocation="http://schema.qcadoo.org/view http://schema.qcadoo.org/view.xsd">

    <component type="window" name="window" reference="window">

        <ribbon>
            <template name="standardFormTemplate"/>

            <group name="status">
                <smallButton name="acceptTracking" icon="startIcon16.png"
                             state="disabled" action="#{form}.changeTrackingState(acceptTracking)"/>
                <smallButton name="cancelTracking" icon="deleteIcon16.png"
                             state="disabled" action="#{form}.changeTrackingState(cancelTracking)"/>
            </group>
            <group name="productsQuantities">
                <bigButton name="copyPlannedQuantityToUsedQuantity" icon="copyIcon24.png"
                           state="disabled" action="#{form}.fireEvent(copyPlannedQuantityToUsedQuantity);"/>
            </group>
            <group name="workTime">
                <bigButton name="calcTotalLaborTime" icon="calculateTimeIcon24.png"
                           state="disabled" action="#{form}.fireEvent(calcTotalLaborTime);"/>
            </group>
            <group name="correction">
                <bigButton name="correct" icon="copyIcon24.png"
                           state="disabled">
                     <script>
                        <![CDATA[
							this.addOnChangeListener({
								onClick: function() {
									if(window.confirm("#{translate(productionCounting.productionTrackingDetails.window.ribbon.correction.confirm)}")) {
										#{form}.performEvent('correct', []);
									}
								}
							});
						]]>
                    </script>
            	</bigButton>
            </group>
        </ribbon>

        <windowTab name="mainTab">
            <component type="form" name="productionTrackingDetails"
                       reference="form">
                <script>
                    <![CDATA[
                    	var save = #{window}.getRibbonItem("actions.save");
						var saveBack = #{window}.getRibbonItem("actions.saveBack");
						var saveNew = #{window}.getRibbonItem("actions.saveNew");
						var acceptRecord = #{window}.getRibbonItem("status.acceptTracking");
						var cancelRecord = #{window}.getRibbonItem("status.cancelTracking");

						QCDTrack.track(
								save,
								"onClick",
								 QCDTrack.eventResolver.formStateDependent( "addProductionRecord" , "modifyProductionRecord")
						);

						QCDTrack.track(
								saveBack,
								"onClick",
								 QCDTrack.eventResolver.formStateDependent( "addProductionRecord" , "modifyProductionRecord")
						);

						QCDTrack.track(
								saveNew,
								"onClick",
								 QCDTrack.eventResolver.formStateDependent( "addProductionRecord" , "modifyProductionRecord")
						);

						QCDTrack.track(
								acceptRecord,
								"onClick",
								"acceptProductionRecord"
						);

                    	QCDTrack.track(
								cancelRecord,
								"onClick",
								"cancelProductionRecord"
						);
					]]>
                </script>
                <script>
                    <![CDATA[
						this.changeTrackingState = function(eventPerformer, ribbonItemName) {
							var ribbonItem = #{window}.getRibbonItem("status." + ribbonItemName);
							var newState = ribbonItem.forState;
							if (window.confirm(ribbonItem.confirmMessage)) {
								#{form}.fireEvent(eventPerformer, 'changeTrackingState', [newState]);
							}
						}

						this.addOnChangeListener({
							onSetValue: function() {
								var itemNames = ["status.acceptTracking", "status.cancelTracking"];
								var isSaved = (#{form}.getValue().content && #{form}.getValue().content.entityId);
								var isDisabled = (#{isDisabled}.getValue().content.value == "1");
								var itemsToDisable = ["actions.save","actions.saveNew","actions.saveBack"];

								for (var elementKey in itemNames) {
									var ribbonItem = #{window}.getRibbonItem(itemNames[elementKey]);

									if (isSaved) {
										ribbonItem.enable();
									} else {
										ribbonItem.disable();
									}
								}
 								
   								for(var elementKey in itemsToDisable){  
   									var ribbonItem = #{window}.getRibbonItem(itemsToDisable[elementKey]);

   									if(isDisabled){  
   										ribbonItem.disable();  
 									} else {  
										ribbonItem.enable();   
 									}   

     							}

								if (isSaved && #{state}.getValue().content && #{state}.getValue().content.value) {
									#{state}.updateRibbon(#{state}.getValue().content.value);
								}
							}
						});
					]]>
                </script>

                <component type="gridLayout" name="mainGridLayout"
                           columns="3" rows="1">
                    <layoutElement column="1" row="1">
                        <component type="checkbox" name="lastTracking" field="lastTracking"
                                   reference="lastTracking" hasDescription="true"/>
                        <component type="input" name="number" field="number"
                                   reference="number" defaultEnabled="false">
                            <option type="alignment" value="right"/>
                        </component>
                        <component type="checkbox" name="isCorrection" field="isCorrection"
                                   reference="isCorrection" defaultEnabled="false" hasDescription="true"/>
                        <component type="input" name="corrects" field="corrects"
                                   reference="corrects" defaultEnabled="false" defaultVisible="false">
                            <option type="alignment" value="right"/>
                        </component>
                        <component type="lookup" name="order" field="order"
                                   reference="order">
                            <option type="column" name="name" fields="name" link="true"/>
                            <option type="column" name="state" fields="state"/>
                            <option type="column" name="typeOfProductionRecording"
                                    fields="typeOfProductionRecording"/>

                            <option type="required" value="true"/>

                            <option type="searchable" value="name,number,state,typeOfProductionRecording"/>
                            <option type="orderable" value="name,number,state,typeOfProductionRecording"/>

                            <option type="order" column="number" direction="desc"/>

                            <option type="expression"
                                    value="#number + ' - ' + #name"/>
                            <option type="fieldCode" value="number"/>

                            <!-- TODO replace these listeners with one general event-method (for
                                example "onSelectedOrderChange"), like for hooks types -->

                            <criteriaModifier
                                    class="com.qcadoo.mes.productionCounting.criteriaModifiers.OrderCriteriaModifiersPC"
                                    method="showAcceptedAndInterrupted"/>

                            <listener event="onSelectedEntityChange"
                                      class="com.qcadoo.mes.productionCounting.listeners.ProductionTrackingDetailsListeners"
                                      method="clearFields"/>
                            <listener event="onSelectedEntityChange"
                                      class="com.qcadoo.mes.productionCounting.listeners.ProductionTrackingDetailsListeners"
                                      method="enableOrDisableFields"/>
                            <listener event="onSelectedEntityChange"
                                      class="com.qcadoo.mes.productionCounting.listeners.ProductionTrackingDetailsListeners"
                                      method="checkJustOne"/>
                        </component>
                        <component type="lookup" name="productionLine" field="#{order}.productionLine"
                                   reference="productionLine" defaultEnabled="never">

                            <option type="column" name="name" fields="name" link="true"
                                    width="300"/>

                            <option type="searchable" value="name,number"/>
                            <option type="orderable" value="name,number"/>

                            <option type="expression"
                                    value="#number + ' - ' + #name"/>
                            <option type="fieldCode" value="number"/>
                        </component>
                        <component type="lookup" name="technologyOperationComponent"
                                   field="technologyOperationComponent" reference="technologyOperationComponent"
                                   defaultVisible="false" defaultEnabled="true">
                            <option type="column" name="name" fields="operation"
                                    expression="#operation['name']" link="true"/>

                            <option type="searchable" value="name,nodeNumber"/>
                            <option type="orderable" value="name,nodeNumber"/>

                            <option type="expression" value="#nodeNumber + '  ' + #operation['name']"/>
                            <option type="fieldCode" value="nodeNumber"/>

                            <criteriaModifier
                                    class="com.qcadoo.mes.productionCounting.criteriaModifiers.TechnologyOperationComponentCriteriaModifiersPC"
                                    method="restrictTechnologyOperationComponentsToOrderTechnology"/>

                            <listener event="onSelectedEntityChange"
                                      class="com.qcadoo.mes.productionCounting.listeners.ProductionTrackingDetailsListeners"
                                      method="fillWorkstationTypeField"/>
                        </component>
                    </layoutElement>
                    <layoutElement column="2" row="1">
                        <component type="borderLayout" name="shiftBox"
                                   reference="shiftBox">
                            <component type="gridLayout" name="shiftBoxGridLayout"
                                       columns="1" rows="2" reference="shiftBoxGridLayout">
                                <layoutElement column="1" row="1">
                                    <component type="lookup" name="shift" reference="shift"
                                               field="shift">
                                        <option type="searchable" value="name"/>
                                        <option type="orderable" value="name"/>

                                        <option type="expression" value="#name"/>
                                        <option type="fieldCode" value="name"/>
                                    </component>
                                </layoutElement>
                                <layoutElement column="1" row="2">
                                    <component type="calendar" name="shiftStartDay"
                                               field="#{form}.shiftStartDay" reference="shiftStartDay"
                                               defaultEnabled="true">
                                        <option type="withTimePicker" value="false"/>
                                    </component>
                                </layoutElement>
                            </component>

                            <option type="label" value="shiftBoxLabel"/>
                        </component>
                        <component type="borderLayout" name="timeRangeBox"
                                   reference="timeRangeBox">
                            <component type="gridLayout" name="timeRangeBoxGridLayout"
                                       columns="1" rows="2" reference="timeRangeBoxGridLayout">
                                <layoutElement column="1" row="1">
                                    <component type="calendar" name="timeRangeFrom"
                                               field="timeRangeFrom" reference="timeRangeFrom"
                                               defaultEnabled="true">
                                        <option type="withTimePicker" value="true"/>
                                    </component>
                                </layoutElement>
                                <layoutElement column="1" row="2">
                                    <component type="calendar" name="timeRangeTo" field="timeRangeTo"
                                               reference="timeRangeTo" defaultEnabled="true">
                                        <option type="withTimePicker" value="true"/>
                                    </component>
                                </layoutElement>
                            </component>

                            <option type="label" value="timeRangeBoxLabel"/>
                        </component>
                    </layoutElement>
                    <layoutElement column="3" row="1">
                        <component type="select" name="state" field="state"
                                   reference="state" defaultEnabled="never">
                            <script>
                                <![CDATA[
									this.addOnChangeListener({
										onSetValue: function(newValue) {
											if (!newValue || !newValue.content) {
												return;
											}
											var isSaved = (#{form}.getValue().content && #{form}.getValue().content.entityId);
											var state = newValue.content.value;
											if(isSaved){
												updateRibbon(state);
											}
										}
									});

									function toggleEditable(enabled, message) {
										var toggleRibbonItems = [
											"actions.save", "actions.saveBack", "actions.saveNew", "actions.cancel", "actions.delete",
											"status.cancelTracking", "status.acceptTracking",
											"productsQuantities.copyPlannedQuantityToUsedQuantity",
                                                 "workTime.calcTotalLaborTime"
										],

										toggleRibbonItemsLen = toggleRibbonItems.length,
                                             idx = 0,
										elementKey = {},
										ribbonItemName = "",
										ribbonItem = {};


										for (idx = 0; idx < toggleRibbonItemsLen; idx++) {
 											ribbonItemName = toggleRibbonItems[idx];
											ribbonItem = #{window}.getRibbonItem(ribbonItemName);

											if (!ribbonItem) {
												QCD.error("Can't find ribbon item '" + ribbonItemName + "'");
												continue;
											}

											if (enabled) {
												ribbonItem.enable();
											} else {
												ribbonItem.disable(message);
											}
										}
									}

									function enableDeleteButton() {
										#{window}.getRibbonItem("actions.delete").enable();
									}

									function updateRibbon(state) {
										var acceptState = #{window}.getRibbonItem("status.acceptTracking");
										var cancelState = #{window}.getRibbonItem("status.cancelTracking");

										acceptState.disable();
										acceptState.forState="02accepted";
										acceptState.confirmMessage = "#{translate(productionCounting.productionTrackingDetails.window.ribbon.status.acceptTracking.confirm)}";

										cancelState.disable();
										cancelState.forState="03declined";
										cancelState.confirmMessage = "#{translate(productionCounting.productionTrackingDetails.window.ribbon.status.declineTracking.confirm)}";

										if (#{isExternalSynchronized}.getValue().content.value == 0) {
											var msg = "#{translate(productionCounting.productionTracking.info.isWaitingForSync)}";
											toggleEditable(false, msg);
										} else if (state == "01draft") {
											toggleEditable(true);
										} else if (state == "02accepted") {
											toggleEditable(false);
											cancelState.disable();
										} else if (state == "03declined") {
											toggleEditable(false);
											enableDeleteButton();
										} else if (state == "04corrected") {
											toggleEditable(false);
											acceptState.disable();
											cancelState.disable();
										} else{
											QCD.error("Unknown state - '" + state + "'");
											toggleEditable(true);
										}
									}

									this.updateRibbon = updateRibbon;

								]]>
                            </script>
                        </component>
                        <component type="lookup" name="staff" reference="staff"
                                   field="staff">
                            <option type="column" name="name" fields="name"/>

                            <option type="searchable" value="name,surname"/>
                            <option type="orderable" value="name,surname"/>

                            <option type="expression"
                                    value="#name + ' ' + #surname"/>
                            <option type="fieldCode" value="surname"/>

                            <listener event="onSelectedEntityChange"
                                      class="com.qcadoo.mes.productionCounting.listeners.ProductionTrackingDetailsListeners"
                                      method="fillShiftAndDivisionField"/>
                        </component>
                        <component type="lookup" name="workstationType"
                                   reference="workstationType" field="workstationType">
                            <option type="column" name="name" fields="name" link="true"/>

                            <option type="searchable" value="name,number"/>
                            <option type="orderable" value="name,number"/>

                            <option type="expression"
                                    value="#number + ' - ' + #name"/>
                            <option type="fieldCode" value="number"/>

                            <listener event="onSelectedEntityChange"
                                      class="com.qcadoo.mes.productionCounting.listeners.ProductionTrackingDetailsListeners"
                                      method="fillDivisionField"/>
                        </component>
                        <component type="lookup" name="division" reference="division"
                                   field="division">
                            <option type="column" name="name" fields="name"/>

                            <option type="searchable" value="name,number"/>
                            <option type="orderable" value="name,number"/>

                            <option type="expression"
                                    value="#number + ' - ' + #name"/>
                            <option type="fieldCode" value="number"/>
                        </component>
                        <component type="checkbox" name="isDisabled" reference="isDisabled"
                                   defaultVisible="false" hasLabel="false"/>
                        <component type="hidden" name="isExternalSynchronized"
                                   reference="isExternalSynchronized" defaultVisible="false"
                                   field="isExternalSynchronized"/>
                    </layoutElement>
                </component>

                <option type="header" value="true"/>
                <option type="expression" value="#number"/>

<!--                <listener event="changeTrackingState"
                          class="com.qcadoo.mes.productionCounting.states.client.ProductionTrackingStateChangeViewClient"
                          method="changeState"/>-->
                <listener event="changeTrackingState"
                          class="com.qcadoo.mes.productionCounting.listeners.ProductionTrackingDetailsListeners"
                          method="changeTrackingState"/>
                          
                <listener event="copyPlannedQuantityToUsedQuantity"
                          class="com.qcadoo.mes.productionCounting.listeners.ProductionTrackingDetailsListeners"
                          method="copyPlannedQuantityToUsedQuantity"/>

                <listener event="calcTotalLaborTime"
                          class="com.qcadoo.mes.productionCounting.listeners.ProductionTrackingDetailsListeners"
                          method="calcTotalLaborTime"/>

                <listener event="correct"
                          class="com.qcadoo.mes.productionCounting.listeners.ProductionTrackingDetailsListeners"
                          method="correct"/>

            </component>
        </windowTab>

        <windowTab name="productsTab" reference="productsTab">
            <component type="gridLayout" name="productsGridLayout"
                       columns="1" rows="2">
                <layoutElement column="1" row="1">
                    <component type="grid" name="trackingOperationProductInComponents"
                               reference="trackingOperationProductInComponents"
                               source="#{form}.trackingOperationProductInComponents"
                               defaultEnabled="false">
                        <option type="column" name="number" fields="product"
                                expression="#product['number']" link="true" width="100"/>
                        <option type="column" name="name" fields="product"
                                expression="#product['name']" link="true" width="200"/>
                        <option type="column" name="plannedQuantity" fields="plannedQuantity"
                                width="100"/>
                        <option type="column" name="usedQuantity" fields="usedQuantity"
                                width="100"/>
                        <option type="column" name="unit" fields="product"
                                expression="#product['unit']" link="false" width="50"/>

                        <option type="correspondingView"
                                value="productionCounting/trackingOperationProductInComponentDetails"/>
                        <option type="correspondingComponent" value="form"/>
                        <option type="correspondingViewInModal" value="true"/>

                        <option type="order" column="number" direction="desc"/>

                        <option type="searchable" value="number,name,usedQuantity,unit"/>
                        <option type="orderable" value="number,name,usedQuantity,unit"/>

                        <option type="creatable" value="false"/>
                        <option type="deletable" value="false"/>

                        <option type="fullscreen" value="true"/>
                        <option type="multiselect" value="false"/>
                        <option type="fixedHeight" value="true"/>
                    </component>
                </layoutElement>
                <layoutElement column="1" row="2">
                    <component type="grid" name="trackingOperationProductOutComponents"
                               reference="trackingOperationProductOutComponents"
                               source="#{form}.trackingOperationProductOutComponents"
                               defaultEnabled="false">
                        <option type="column" name="number" fields="product"
                                expression="#product['number']" link="true" width="100"/>
                        <option type="column" name="name" fields="product"
                                expression="#product['name']" link="true" width="220"/>
                        <option type="column" name="plannedQuantity" fields="plannedQuantity"
                                width="100"/>


                        <option type="column" name="producedSum" fields="producedSum"
                                width="100"/>
                        <option type="column" name="wastesSum" fields="wastesSum"
                                width="100"/>

                        <option type="column" name="remainingQuantity" fields="remainingQuantity"
                                width="100"/>

                        <option type="column" name="usedQuantity" fields="usedQuantity"
                                width="100"/>
                        <option type="column" name="wastesQuantity" fields="wastesQuantity" width="70"/>
                        <option type="column" name="unit" fields="product"
                                expression="#product['unit']" link="false" width="50"/>

                        <option type="correspondingView"
                                value="productionCounting/trackingOperationProductOutComponentDetails"/>
                        <option type="correspondingComponent" value="form"/>
                        <option type="correspondingViewInModal" value="true"/>

                        <option type="order" column="number" direction="desc"/>

                        <option type="searchable"
                                value="number,name,usedQuantity,unit,producedSum,wastesSum,remainingQuantity,wastesQuantity"/>
                        <option type="orderable"
                                value="number,name,usedQuantity,unit,producedSum,wastesSum,remainingQuantity,wastesQuantity"/>

                        <option type="creatable" value="false"/>
                        <option type="deletable" value="false"/>

                        <option type="fullscreen" value="true"/>
                        <option type="multiselect" value="false"/>
                        <option type="fixedHeight" value="true"/>
                    </component>
                </layoutElement>
            </component>
        </windowTab>

        <windowTab name="timeTab" reference="timeTab">
            <component type="gridLayout" name="timeGridLayout" columns="2"
                       rows="1">
                <layoutElement column="1" row="1">

                    <component type="time" name="laborTime" reference="laborTime"
                               field="#{form}.laborTime" hasDescription="true">
                        <option type="noHours" value="5"/>
                    </component>
                    <component type="grid" name="staffWorkTimes" reference="staffWorkTimes"
                               source="#{form}.staffWorkTimes">
                        <option type="column" name="workerNumber" fields="worker"
                                expression="#worker['number']" link="true"/>
                        <option type="column" name="workerName" fields="worker"
                                expression="#worker['name']" link="true"/>
                        <option type="column" name="workerSurname" fields="worker"
                                expression="#worker['surname']" link="true"/>
                        <option type="column" name="laborTime" fields="laborTime"
                                expression="T(com.qcadoo.view.api.utils.TimeConverterService).convertTimeToString(#laborTime)"/>

                        <option type="order" column="workerNumber" direction="asc"/>

                        <option type="correspondingView" value="productionCounting/staffWorkTimeDetails"/>
                        <option type="correspondingComponent" value="form"/>
                        <option type="correspondingViewInModal" value="true"/>

                        <option type="creatable" value="true"/>
                        <option type="deletable" value="true"/>

                        <option type="searchable" value="workerNumber,workerName,workerSurname"/>
                        <option type="orderable" value="workerNumber,workerName,workerSurname"/>
                    </component>
                </layoutElement>
                <layoutElement column="2" row="1">
                    <component type="time" name="machineTime" reference="machineTime"
                               field="#{form}.machineTime" hasDescription="true">
                        <option type="noHours" value="5"/>
                    </component>
                </layoutElement>
            </component>
        </windowTab>

        <windowTab name="pieceworkTab" reference="pieceworkTab">
            <component type="gridLayout" name="pieceworkGridLayout"
                       columns="3" rows="1">
                <layoutElement column="1" row="1">
                    <component type="input" name="executedOperationCycles"
                               reference="executedOperationCycles" field="#{form}.executedOperationCycles">
                        <option type="alignment" value="right"/>
                    </component>
                </layoutElement>
            </component>
        </windowTab>

        <windowTab name="historyTab">
            <component type="gridLayout" name="loggingsGridLayout"
                       columns="2" rows="1">
                <layoutElement column="1" row="1">
                    <component type="grid" name="stateChanges" reference="stateChanges"
                               source="#{form}.stateChanges">
                        <option type="column" name="dateAndTime" fields="dateAndTime"/>
                        <option type="column" name="currentState" fields="targetState"/>
                        <option type="column" name="worker" fields="worker"/>

                        <option type="order" column="dateAndTime" direction="asc"/>

                        <option type="searchable" value="dateAndTime,targetState,worker"/>
                        <option type="orderable" value="dateAndTime,targetState,worker"/>

                        <criteriaModifier
                                class="com.qcadoo.mes.states.criteriaModifier.CommonCriteriaModifiers"
                                method="filterHistory"/>
                    </component>
                </layoutElement>
            </component>
        </windowTab>

    </component>

    <hooks>
        <beforeRender
                class="com.qcadoo.mes.productionCounting.hooks.ProductionTrackingDetailsHooks"
                method="onBeforeRender"/>
    </hooks>

</view>