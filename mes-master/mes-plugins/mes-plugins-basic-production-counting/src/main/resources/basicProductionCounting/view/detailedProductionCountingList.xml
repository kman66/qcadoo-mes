<?xml version="1.0" encoding="UTF-8"?>
<!--

    ***************************************************************************
    Copyright (c) 2010 Qcadoo Limited
    Project: Qcadoo MES
    Version: 1.4

    This file is part of Qcadoo.

    Qcadoo is free software; you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation; either version 3 of the License,
    or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
    ***************************************************************************

-->
<view defaultAuthorizationRole="ROLE_BASE_FUNCTIONALITY" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schema.qcadoo.org/view"
      xsi:schemaLocation="http://schema.qcadoo.org/view http://schema.qcadoo.org/view.xsd"
      name="detailedProductionCountingList" modelName="order" modelPlugin="orders">

    <component type="window" name="window">

        <ribbon>
            <group template="navigation" />

            <template name="standardGridTemplate" excludeItems="actions.new,actions.copy,actions.delete" />
        </ribbon>

        <component type="form" name="order" reference="order" />
        <component type="form" name="basicProductionCounting"
                   reference="form">
            <component type="grid" name="productionCountingQuantities"
                       reference="grid" source="#{order}.productionCountingQuantities">
                <script>
                            <![CDATA[
                                var that = this;
                                this.onDeleteButtonClicked = function () {
                                    var selectedEntities = #{grid}.getValue().content.selectedEntities;
                                    if (window.confirm("#{translate(qcadooView.grid.confirmDeleteMessage)}" + "?")) {
                                        #{grid}.fireEvent(null,'removeSelectedProductionCountingQuantities',[selectedEntities]);
                                    }
                                };
                            ]]>
                </script>                            
                <option type="column" name="productNumber" fields="product"
					expression="#product['number']" link="true" width="65"/>
                <option type="column" name="productName" fields="product"
					expression="#product['name']" link="true" width="85"/>
                <option type="column" name="nodeNumber" fields="technologyOperationComponent"
                        expression="(#technologyOperationComponent == null) ? '' : #technologyOperationComponent.get('nodeNumber')"
					link="true" width="40"/>
                <option type="column" name="operationNumber" fields="technologyOperationComponent"
                        expression="(#technologyOperationComponent == null) ? '' : #technologyOperationComponent.get('operation')?.get('number')"
					link="true" width="40"/>
                <option type="column" name="operationName" fields="technologyOperationComponent"
                        expression="(#technologyOperationComponent == null) ? '' : #technologyOperationComponent.get('operation')?.get('name')"
					link="true" width="50"/>
				<option type="column" name="role" fields="role" link="true" width="40"/>
                <option type="column" name="typeOfMaterial" fields="typeOfMaterial"
					link="true" width="40"/>
				<option type="column" name="plannedQuantity" fields="plannedQuantity" width="30"/>
                <option type="column" name="productUnit" fields="product"
					expression="#product['unit']" width="20"/>
                <option type="column" name="set" fields="set" width="30"/>

                <option type="order" column="productNumber" direction="asc" />

                <option type="searchable"
                        value="productNumber,productName,role,typeOfMaterial,plannedQuantity,productUnit,set" />
                <option type="orderable"
                        value="productNumber,productName,role,typeOfMaterial,plannedQuantity,productUnit,set" />

                <option type="correspondingView"
                        value="basicProductionCounting/productionCountingQuantityDetails" />
                <option type="correspondingComponent" value="form" />
                <option type="correspondingViewInModal" value="true" />

                <option type="creatable" value="true" />
                <option type="deletable" value="true" />
                <option type="fullscreen" value="true" />
                <option type="multiselect" value="true" />
                <option type="fixedHeight" value="true" />

                <rowStyleResolver
                    class="com.qcadoo.mes.basicProductionCounting.rowStyleResolvers.DetailedProductionCountingListCriteriaModifiers"
                    method="fillRowStylesDependsOfTypeOfMaterial" />
                
                <listener event="removeSelectedProductionCountingQuantities"
                                  method="onRemoveSelectedProductionCountingQuantities"
                                  class="com.qcadoo.mes.basicProductionCounting.hooks.DetailedProductionCountingListHooks"/>
            </component>
        </component>

        <option type="fixedHeight" value="true" />
        <option type="header" value="false" />
    </component>

    <hooks>
        <beforeRender
            class="com.qcadoo.mes.basicProductionCounting.hooks.DetailedProductionCountingListHooks"
            method="setGridEditableDependsOfOrderState" />
    </hooks>

</view>